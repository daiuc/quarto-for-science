---
format: 
  revealjs:
    slide-number: true
    width: 1500
    height: 1000
    footer: "[Quarto for Science]"
    css: ["theme/theme.css"]
    theme: simple
editor: visual
---

##  {background-image="images/chuttersnap-UmncJq4KPcA-unsplash.jpg" background-position="left"}

<h1>Quarto for Science</h1>

<br>

<h2>Reproducible Data Analysis</h2>

<h3>`r Sys.Date()`</h3>

<br>

::: footer
:::

## We will learn

<br><br>

> What is reproducible data analysis

> What is literate programming and why it is useful for scientists

> Write a Quarto document

## What is reproducible data analysis?

\
Goals:

- validate your results
- keep track of your progress from initial analysis to final manuscript ready figures
- allow other researchers to use your data and code and reproduce your results

\

Key aspects of reproducible data analysis:

- reproducible environment (e.g. R, Python, Julia, etc.)
- version control (e.g. git)
- clear documentation (e.g. README, code comments, etc.)
- automated workflow (e.g. snakemake)


## What's your experience?

\

> How did you communicate your work to your PI or lab mates / classmates?

<br>

> What paint points did you encounter in data analysis, scientific writing?


## Lots of scenarios ...

\

> How did I make this figure?

> Where did I get this data?

> The figures in my manuscript are out of date, how do I update them?

> My lab mate wants to do the same analysis (e.g. differential gene expression), how do I share it with them?




## Hello Quarto


> If you haven't heard of Quarto, perhaps you know about rstudio from Quantitative Analysis Bootcamp.

> Quarto is an open-source scientific and technical publishing system built on [Pandoc](https://pandoc.org/)

> Quarto is a new way to write documents that are:
> 
> - reproducible
> - interactive

\
\

## Literate Programming

> You can weave together narrative text and code in one document (`.qmd`) to produce multiple output as pdf, word documents, web pages, blog posts, presentation slides, thesis, books and more.

## What is Quarto?

> A Quarto document i.e. a `.qmd` is a plain text file, like a `.rmd`, that can be rendered to many different formats

![](https://quarto.org/docs/get-started/hello/images/rstudio-source-visual.png){width="1200px" fig-align="center" fig-alt="A screenshot of a Visual and Source Quarto document"}

## You can write in one .qmd file but output in multiple format simutaneously!

\
\
Useful formats for scientific writing:

-   html (publish your analysis on GitHub!)
-   pdf (wrap up that paper!)
-   book (ready for your thesis?)

All of these formats can be rendered from the same `.qmd` file! And they look great out of the box usually!




## Anatomy of a Quarto document

-   Metadata (YAML)

``` yaml
---
format: html
---
```

. . .

-   Code

```{r}
#| echo: fenced
#| eval: true
library(dplyr)
mtcars %>% 
  group_by(cyl) %>%
  summarize(mean = mean(mpg), .groups = "drop")
```

. . .

-   Text

``` markdown
# Heading 1
This is a sentence with some **bold text**, some *italic text* and an [image](image.png).
```

## Metadata: YAML

The [YAML](https://yaml.org/) metadata or header is:

> processed in many stages of the rendering process and can influence the final document in many different ways. It is placed at the very beginning of the document and is read by each of Pandoc, Quarto and `knitr`. Along the way, the information that it contains can affect the code, content, and the rendering process.

## YAML

``` yaml
---
title: "My Document"
format: 
  html:
    toc: true
    code-fold: true
---
```

## Markdown

> Quarto is based on Pandoc and uses its variation of markdown as its underlying document syntax. Pandoc markdown is an extended and slightly revised version of John Gruber's [Markdown](https://daringfireball.net/projects/markdown/) syntax.

. . .

> Markdown is a plain text format that is designed to be easy to write, and, even more importantly, easy to read

## Text Formatting

+-----------------------------------+-------------------------------+
| Markdown Syntax                   | Output                        |
+===================================+===============================+
| ```                               | *italics* and **bold**        |
| *italics* and **bold**            |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+
| ```                               | superscript^2^ / subscript~2~ |
| superscript^2^ / subscript~2~     |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+
| ```                               | ~~strikethrough~~             |
| ~~strikethrough~~                 |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+
| ```                               | `verbatim code`               |
| `verbatim code`                   |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+
| ```                               |    $Y=\beta_0 + \beta_1 X$    |
| math symbols and equations        |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+


## Headings

+------------------+-----------------+
| Markdown Syntax  | Output          |
+==================+=================+
| ```              | # Header 1      |
| # Header 1       |                 |
| ```              |                 |
+------------------+-----------------+
| ```              | ## Header 2     |
| ## Header 2      |                 |
| ```              |                 |
+------------------+-----------------+
| ```              | ### Header 3    |
| ### Header 3     |                 |
| ```              |                 |
+------------------+-----------------+
| ```              | #### Header 4   |
| #### Header 4    |                 |
| ```              |                 |
+------------------+-----------------+
| ```              | ##### Header 5  |
| ##### Header 5   |                 |
| ```              |                 |
+------------------+-----------------+
| ```              | ###### Header 6 |
| ###### Header 6  |                 |
| ```              |                 |
+------------------+-----------------+

## Code

```{r}
#| echo: fenced
#| output-location: column
#| label: fig-airquality
#| fig-cap: Temperature and ozone level.
#| warning: false

library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess"
)
```

## Code, more than just R

::: columns
::: {.column width="50%"}
```` python
```{{python}}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```
````
:::

::: {.column width="50%"}
![](images/polar-axis.png){width="650px"}
:::
:::

## Rendering

1.  Render in RStudio

![](https://quarto.org/docs/tools/images/rstudio-render.png){fig-alt="A screenshot of the render button in RStudio"}

. . .

2.  System shell via `quarto render`

```{bash}
#| eval: false
#| echo: true
quarto render document.qmd # defaults to html
quarto render document.qmd --to pdf
quarto render document.qmd --to docx
```

## Results

::: panel-tabset
### pdf - paper

![](images/pdf-eg1.png){width="60%"}

### website

![](images/web-eg1.png){width="60%"}

### pdf - cv

![](images/cv-pic.png){width="60%"}
:::

::: footer
:::

## {background-image="images/paper-texture.jpg" background-position="left"}

\
\

<h2 style="text-align: center;">Quick demo</h1>

. . .

\

## Recap 

\

#### Reproducible data analysis

- reproducible environment
- version control
- clear documentation
- automated workflow

#### Literate programming 

- Weave together code and text to create a single document that contains all of the information needed to understand the analysis and its results.

#### Use quarto and markdown!


##  {background-image="images/chuttersnap-UmncJq4KPcA-unsplash.jpg" background-position="left"}
\
\

<h1 style="text-align: center;">Thank you!</h1>
